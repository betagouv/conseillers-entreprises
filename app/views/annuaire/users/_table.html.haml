.fr-table--c-annuaire
  %table
    %thead
      -# For the subjects columns, we'll build our header on 3 rows: theme, subject and institutions_subject.
      %tr
        -# The first 3 columns are for the antenne, team, and user names, spanning the 4 header rows.
        %th{ rowspan: 3 }
        %th{ rowspan: 3 }= User.human_attribute_name(:team_full_name)
        %th{ rowspan: 3 }= User.human_attribute_name(:user)
        -# Subjects columns, first row: the themes, column-spanned for the two remaining header rows
        - grouped_subjects.each do |theme, subjects|
          %th{ colspan: subjects.values.sum(&:size) }= theme.label
      %tr.subjects
        -# Subjects columns, first row: the subjects, column-spanned for the remaining header row
        - grouped_subjects.each_value do |subjects|
          - subjects.each do |subject, institutions_subjects|
            %th{ colspan: institutions_subjects.size, title: subject.label }= subject.label.truncate(30)
      %tr.users-count
        - if referencement_coverages
          - grouped_subjects.each_value do |subjects|
            - subjects.each_value do |institutions_subjects|
              - institutions_subjects.each do |institution_subject|
                - referencement_coverage = referencement_coverages.find_by(institution_subject: institution_subject)
                - if referencement_coverage.present?
                  - alert_classe = referencement_coverage.no_anomalie? ? 'success-table-cell' : 'error-table-cell'
                  %th.coverage-table-cell
                    %button{ class: "coverage-modal-button #{alert_classe}", 'aria-controls': "modal-coverage-#{referencement_coverage.id}", 'data-fr-opened': 'false', title: referencement_coverage_cell_title(referencement_coverage) }
                      = t(referencement_coverage.coverage, scope: 'activerecord.attributes.referencement_coverage/coverage.short', default: "?")
                  = render 'referencement_coverage_modal', referencement_coverage: referencement_coverage

    %tbody
      - grouped_experts.each do |antenne, experts|
        - experts.each_with_index do |expert, index_in_antenne|
          - expert.users.each_with_index do |user, index_in_expert|
            - highlighted_ids = flash[:table_highlighted_ids]
            - expert_first_row = index_in_expert == 0
            - antenne_first_row = index_in_antenne == 0 && expert_first_row
            - antenne_separation_class = antenne_first_row ? 'tr--distinct' : ''
            - highlighted_class = highlighted_ids&.include?(user.id) ? 'blue' : ''
            %tr{ class: [antenne_separation_class, highlighted_class].compact.join(" ") }
              -# antenne cell
              - if antenne_first_row
                %td.td-header.td-header--antenne{ rowspan: experts.flatten.sum{ |e| e.users.size }, title: antenne.name }
                  = link_to antenne, admin_antenne_path(antenne)
              -# expert cell
              - if index_in_expert == 0
                %td.td-header.td-header--expert{ rowspan: expert.users.size }
                  = link_to expert.full_name, edit_admin_expert_path(expert), title: t('.edit_expert', expert_name: expert.full_name, antenne: antenne)
              -# user cell
              %td.td-header.td-header--user
                = build_user_name_cell(user, antenne)

              - if expert_first_row
                - grouped_subjects.each_value do |subjects|
                  - subjects.each_value do |institutions_subjects|
                    - institutions_subjects.each do |institution_subject|
                      -# Weâ€™re using `&` instead of .merge to use the preloaded relations instead of doing a new DB query.
                      - experts_subjects = expert.experts_subjects & institution_subject.experts_subjects
                      - raise 'There should only be one ExpertSubject' if experts_subjects.size > 1
                      - expert_subject = experts_subjects.first
                      -# The InstitutionSubjects cells themselves are spanned on all the rows of the members of the expert team.
                      %td{ rowspan: expert.users.size, class: ('yellow' if expert_subject.present?) }
                        - if expert_subject.present?
                          - intervention_criteria = expert_subject.intervention_criteria
                          - if intervention_criteria.present?
                            .tooltip{ 'tab-index': -1 }
                              = t('yes')
                              %span.tooltiptext= intervention_criteria
                          - else
                            = t('yes')
