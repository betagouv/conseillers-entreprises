.fr-my-4w.reminders.card
  .card__header{ class: "#{expert.last_reminder_register.basket}" }
    %h2.fr-h4.fr-card__title
      = link_to expert.full_name.presence, quo_active_reminders_expert_path(expert), class: 'fr-card__link'
    .fr-grid-row
      .fr-col-7.fr-pb-2v
        %ul.list-unstyled.card-expert__list
          %li= t('.expert_creation_date', date: I18n.l(expert.created_at.to_date, format: :long))
          - if expert.job.present?
            %li
              %span.picto.ri-contacts-book-line{ 'aria-hidden': 'true' }
              = expert.job
          - if expert.antenne.present?
            %li
              %span.picto.ri-government-line{ 'aria-hidden': 'true' }
              = expert.antenne.name
          - if expert.phone_number.present?
            %li
              %span.picto.ri-phone-line{ 'aria-hidden': 'true' }
              = link_to(expert.phone_number, "tel:#{expert.phone_number}")
          - if expert.email.present?
            %li
              %span.picto.ri-mail-line{ 'aria-hidden': 'true' }
              = mail_to expert.email, expert.email, class: 'break-word'
      .fr-col-5
        - expert.antenne.managers.each do |manager|
          %ul.list-unstyled.card-expert__list
            %li
              %span.picto.ri-nurse-fill{ 'aria-hidden': 'true' }
              = t('.manager_name', name: manager.full_name)
            %li
              %span.picto.ri-mail-fill{ 'aria-hidden': 'true' }
              = mail_to manager.email, manager.email, class: 'break-word'
            - if manager.phone_number.present?
              %li
                %span.picto.ri-phone-fill{ 'aria-hidden': 'true' }
                = link_to(manager.phone_number, "tel:#{manager.phone_number}")
    - if expert.users.many?
      .fr-grid-row
        .fr-col-7
          .fr-accordion__title
            %button.fr-accordion__btn.fr-btn.fr-btn--secondary.fr-btn--sm.fr-p-2v{ 'aria-controls': "accordion-#{expert.id}", 'aria-expanded': 'false' }
              = t('.team_composition')
          .fr-collapse.team-members{ id: "accordion-#{expert.id}" }
            = render partial: 'user_admin_view', collection: expert.users, as: :user
  .fr-card__body
    - cache ["received_matches", expert, expert.received_matches] do
      .card-expert__subtitle= t('.matches_total')
      .fr-tags-group
        .fr-tag
          .bold= expert.received_matches.count
          .fr-ml-1v= t('.received_matches')
        - inbox_collections_counts(expert).each do |name, count|
          - path = polymorphic_path([name, :reminders, expert])
          = link_to path, class: 'fr-tag' do
            .bold= count
            .fr-ml-1v= t(name, scope: 'needs.collections').downcase
        - archived_needs = expert.needs_archived
        %span.fr-tag
          .bold= archived_needs.size
          .fr-ml-1v= t(:archived, scope: 'needs.collections').downcase

    %hr
    = render 'feedbacks/form', feedback: expert.reminder_feedbacks.new
    .fr-mt-3w{ id: "display-feedbacks-#{expert.id}" }
      - feedbacks = expert.reminder_feedbacks.order(created_at: :desc)
      = render partial: 'feedbacks/feedback', collection: feedbacks.limit(2)
      -# On affiche les 2 premiers commentaires, les autres sont dÃ©pliables
      - if expert.reminder_feedbacks.size > 2
        - remaining_feedbacks = feedbacks.offset(2)
        %section.fr-accordion
          %h4.fr-accordion__title
          %button.fr-accordion__btn.fr-text--sm{ aria: { expanded: "false", controls: "hidden-feedbacks-#{expert.id}" } }
            = t('.see_remaining_feedbacks', count: remaining_feedbacks.size)
        .fr-collapse.fr-pt-2w{ id: "hidden-feedbacks-#{expert.id}" }
          = render partial: 'feedbacks/feedback', collection: remaining_feedbacks

  .card__footer
    = form_with model: expert, url: send_reminder_email_reminders_expert_path(expert), method: :post do |f|
      = f.submit t('.send_reminders_email'), class: 'fr-btn fr-btn--secondary fr-mr-2v'
    - if action == :inputs
      = form_with model: expert, url: reminders_reminders_register_path(expert.reminders_registers.current_input_category.first), method: :post, local: true, data: { turbo: false } do |f|
        = f.submit t('.process'), class: 'fr-btn fr-mr-2v'
