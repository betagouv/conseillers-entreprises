- cache [need, action] do
  .card-reminders-need.fr-my-4w.card
    .card__header
      .card__title
        %h2= link_to need.company.name, need_path(need, origin: 'reminders')
        %span.subtitle= I18n.l(need.display_date, format: :long)
      = render 'reminders/needs_badges', need: need
    .fr-card__body
      .card__need.fr-mb-2w
        .card__need-title
          %h3.fr-h6
            = need.subject
          .subtitle
            = need.matches.human_count
            - if need.no_activity?
              .label.label--sm.orange= t('diagnoses.diagnosis.last_activity_date', l: l(need.updated_at.to_date, format: :long))
      .card__match-list.fr-mb-2w
        - need.matches.preload(expert: :antenne).each do |match|
          - expert = match.expert
          .item
            ‚ÅÉ #{expert.antenne.to_s}
            - if PositionningRate::Member.new(expert).critical_rate?
              = link_to reminders_expert_path(expert), class: 'picto', data: { turbolinks: false } do
                %span.ri-vip-crown-2-fill{ title: t('.critical_rate_expert'), 'aria-hidden': 'true' }
      .card__feedbacks
        %div{ id: "display-feedbacks-#{need.id}" }
          = render partial: 'feedbacks/feedback', collection: need.reminder_feedbacks
        = render 'feedbacks/form', feedback: need.reminder_feedbacks.new
    .card__footer
      = raw build_reminders_card_footer(action, need)
