- meta title: t('.title')

- content_for :header, render('header', title: t('.header', status: @status))
- content_for :menu, render('menu', count: @count_solicitations)

= render 'reminders/territory_choice', territories: @territories

%p= collection_count @solicitations

.ui.divider.hidden
= form_with url: request.fullpath, method: :get, local: true do |f|
  .ui.search.solicitation
    .ui.input.left.icon.fluid.action
      %i.search.icon
      = f.text_field :query, value: params[:query], class: 'prompt', placeholder: t('.search_placeholder')
      %button.ui.button.primary{ type: 'submit' }= t('.search')
    .results
  - if params[:query].present?
    = link_to t('.clear_search'), request.fullpath.split('?').first, id: 'clear-search'

= paginate @solicitations

- max_badge_updated_at = Badge.maximum(:updated_at)
- if @solicitations.present?
  = render(partial: 'solicitations/solicitation', collection: @solicitations, cached: -> (solicitation) { [solicitation, max_badge_updated_at] })
- elsif params[:query].present?
  .ui.divider.hidden
  = t('.no_result')
- else
  .ui.divider.hidden
  .ui.fluid.image= image_tag('no-solicitation.gif')

= paginate @solicitations

:javascript
  $(document).ready(function() {
    $('select.ui.selection.search.dropdown.badges').dropdown({
      fullTextSearch: 'exact',
      ignoreDiacritics: true,
      message: {
        noResults     : '#{link_to t('.manage_badges'), badges_path}'
      }
    })
    $('.modify-badges').click( function() {
      let solicitationId = $(this).data('id')
      let $div = $('#solicitation-' + solicitationId + '-badges')
      let $form = $('#solicitation-' + solicitationId + '-form-badges')
      $div.toggleClass('hide')
      $form.toggleClass('hide')
    })
    let feedbackLinks = document.getElementsByClassName( 'show-feedbacks-form' );
    for ( let feedbackLink of feedbackLinks ) {
      feedbackLink.onclick = function() {
        let solicitationId = feedbackLink.dataset.solicitation
        let form = document.getElementById("feedback-form-solicitation-" + solicitationId)
        form.style.display = 'block'
      }
    }
    $('.ui.search').search({
      type: 'category',
      showNoResults: false,
      source: #{@category_content.to_json.html_safe}
    })
  })
