.ui.compact.inverted.green.menu
  - if solicitation.diagnosis.nil?
    - if solicitation.may_prepare_diagnosis?
      - if solicitation.prepare_diagnosis_errors.present?
        .ui.item
          - error_text = solicitation.prepare_diagnosis_errors.full_messages.to_sentence
          .ui.icon{ data: { tooltip: error_text, variation: 'fixed' } }
            %span.ri-error-warning-line
            = t('.prepare_diagnosis_errors', count: solicitation.prepare_diagnosis_errors.count)
        .ui.item.dropdown
          = t('.prepare_diagnosis_retry')
          %span.ri-arrow-down-s-line.fr-ml-1w
          .ui.menu
            = link_to prepare_diagnosis_solicitation_path(solicitation), class: 'item', method: :post do
              = t('.start_auto_diagnosis')
              %span.ri-arrow-right-s-line.fr-ml-1w
            = link_to new_diagnosis_path(solicitation: solicitation.id), class: 'item' do
              = t('.start_manual_diagnosis')
              %span.ri-arrow-right-s-line.fr-ml-1w
      - else
        = link_to prepare_diagnosis_solicitation_path(solicitation), class: 'ui item', method: :post do
          %span.ri-rocket-2-fill.fr-mr-1w
          = t('.start_auto_diagnosis')
          %span.ri-arrow-right-s-line.fr-ml-1w
    - else
      = link_to new_diagnosis_path(solicitation: solicitation.id), class: 'ui item' do
        = t('.start_diagnosis')
        %span.ri-arrow-right-s-line.fr-ml-1w
  - else
    = link_to_diagnosis(solicitation.diagnosis)

  .ui.item.dropdown
    %span.ri-mail-add-fill
    .ui.menu
      = link_to t('.emails.bad_quality_difficulties'), emails_bad_quality_difficulties_path(id: solicitation.id), method: :post, class: 'item'
      = link_to t('.emails.emails_bad_quality_investment'), emails_bad_quality_investment_path(id: solicitation.id), method: :post, class: 'item'
      = link_to t('.emails.creation'), emails_creation_path(id: solicitation.id), method: :post, class: 'item'
      = link_to t('.emails.out_of_region'), emails_out_of_region_path(id: solicitation.id), method: :post, class: 'item'
      = link_to t('.emails.employee_labor_law'), emails_employee_labor_law_path(id: solicitation.id), method: :post, class: 'item'
      = link_to t('.emails.particular_retirement'), emails_particular_retirement_path(id: solicitation.id), method: :post, class: 'item'
      = link_to t('.emails.siret'), emails_siret_path(id: solicitation.id), method: :post, class: 'item'
      = link_to t('.emails.moderation'), emails_moderation_path(id: solicitation.id), method: :post, class: 'item'

  .ui.item.dropdown
    %span.ri-list-settings-fill
    .ui.menu
      - solicitation.allowed_new_statuses.each do |status|
        = status_action_link(solicitation, status, %w[item])
      .item.show-feedbacks-form{ 'data-feedbackable': "#{solicitation.id}" }= t('feedbacks.add')
      - banning_action = solicitation.from_banned_company? ? t('.unban_facility') : t('.ban_facility')
      = link_to banning_action, ban_facility_solicitation_path(solicitation), method: :post, class: 'item'

