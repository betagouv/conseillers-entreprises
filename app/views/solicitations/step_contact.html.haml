- content_for :header, render('solicitations/header', landing: @landing, landing_subject: @landing_subject, step_data: @step_data, needs_count: @needs_count)

- content_for :form_header do
  - if @landing_subject&.form_description.present?
    .fr-highlight.fr-ml-0
      %h2.fr-h5.fr-mb-2w= t('solicitations.creation_form.accompaniments')
      = sanitize @landing_subject&.form_description&.html_safe
      .contact-delay.fr-mt-4w
        %span.ri-phone-fill.blue{ 'aria-hidden': 'true' }
        %p.fr-m-0
          = t('solicitations.creation_form.five_days_contact_html')
          %span.fr-text--sm
            = t('solicitations.creation_form.average_delays')

- content_for :step_data do
  = render 'solicitations/steps', step_data: @step_data

- if @solicitation.persisted?
  - path = update_step_contact_solicitation_path(@solicitation.uuid)
- else
  - path = { controller: "/solicitations", action: "create", landing_slug: @landing.slug, landing_subject_slug: @landing_subject.slug }.merge(query_params)

.fr-grid-row
  .fr-col-12.fr-col-md-6.fr-col-offset-md-3
    = form_with(model: @solicitation, url: path, local: true, html: { honeypot: true, data: { turbo: false } }) do |f|
      .fr-fieldset
        .fr-fieldset__element
          %p.fr-hint-text.fr-text--bold= t('solicitations.creation_form.all_fields_compulsary')
        = f.hidden_field :landing_subject_id
        = f.hidden_field :landing_id
        - @solicitation.contact_step_required_fields.each do |field|
          .fr-fieldset__element
            .fr-input-group
              - help = t("attributes.help.#{field}_html", default: [".attributes.help.#{field}".to_sym, ''])
              = f.label field, class: 'fr-label'
              - if help.present?
                %span.fr-hint-text= help
              = f.text_field field,
                type: Solicitation::FIELD_TYPES[field],
                required: true,
                class: 'fr-input white-bg',
                autocomplete: Solicitation::AUTOCOMPLETE_TYPES[field]

          - if @solicitation.errors.present?
            .fr-error-text= @solicitation.errors.full_messages_for(field).to_sentence

      .submit-buttons
        = render 'solicitations/next_button'

- content_for :form_footer do
  .fr-grid-row
    .fr-col-12.fr-pb-3w.legal-notice
      = t('solicitations.creation_form.legal_notice_html',
        mailto_link: mail_to('dpo@placedesentreprises.beta.gouv.fr', 'dpo@placedesentreprises.beta.gouv.fr', target: :_blank),
        informations: link_to(t('about.mentions_d_information.title').downcase, mentions_d_information_url),
        subject_personalisation: t(@landing_subject.slug, scope: 'solicitations.creation_form.legal_notice_personalisation', default: ''))

- content_for :footer do
  - unless in_iframe?
    .fr-container--fluid.section-light-grey
      = render 'pages/how_it_works_short'
    - temoignage = TemoignageGenerator.new(@landing_subject.slug)
    = render 'about/temoignage', temoignage: temoignage

    - if @landing_subject.solicitable_institutions.with_logo.any?
      .section-light-grey.fr-pt-8w.fr-pb-5w
        .fr-container
          %h2.text-dark-grey.text-center.text-normal.fr-text--lead
            = t('logos.title')
          = render 'landings/landings/logos', landing_subject: @landing_subject
  = render 'iframe_footer', landing: @landing
