- content_for :header, render('solicitations/header', landing: @landing, landing_subject: @landing_subject, step_data: @step_data, needs_count: @needs_count)

- content_for :step_data do
  = render 'solicitations/steps', step_data: @step_data

.fr-grid-row
  .fr-col-12.fr-col-md-6.fr-col-offset-md-3.fr-pb-3w
    = form_with(model: @solicitation, url: update_step_description_solicitation_path(@solicitation.uuid), local: true, html: { honeypot: true, data: { turbo: false } }) do |f|
      - if @solicitation.landing_subject&.description_explanation.present?
        .fr-highlight.fr-mb-6w
          .highlight__header
            = image_tag('info-alert.png', alt: '')
            %p.fr-pl-2w= t('solicitations.creation_form.better_taking_care')
          = h(@solicitation.landing_subject&.description_explanation&.html_safe)

      - prefill_content = @solicitation.description.blank? ? h(@solicitation.landing_subject&.description_prefill&.html_safe) : ''
      .fr-fieldset{ data: { controller: 'prefill-textarea', 'prefill-textarea-target': 'dataSource', content: prefill_content } }
        .fr-fieldset__element
          .fr-input-group
            = f.label 'description', class: 'fr-label' do
              .bold= t('solicitations.creation_form.description')
            = f.text_area 'description', placeholder: t("solicitations.creation_form.placeholder.description_html"), rows: 12, required: true, autofocus: true, class: 'fr-input white-bg', data: { 'prefill-textarea-target': 'destinationField' }

          - if @solicitation.errors.present?
            .fr-error-text= @solicitation.errors.full_messages_for(:description).to_sentence

      = f.fields_for :institution_filters, @solicitation.institution_filters do |ff|
        - key = ff.object.key
        %fieldset.fr-fieldset{ 'aria-labelledby': "#{key}-legend" }
          %legend.fr-fieldset__legend{ id: "#{key}-legend" }= I18n.t(:label, scope: [:activerecord, :attributes, :additional_subject_questions, key])
          = ff.hidden_field :id
          = ff.hidden_field :additional_subject_question_id
          .fr-fieldset__element.fr-fieldset__element--inline
            .fr-radio-group
              = ff.radio_button :filter_value, true, required: true
              = ff.label :filter_value, I18n.t('true', scope: [:activerecord, :attributes, :additional_subject_questions, key], default: t('yes').titleize), value: true, class: 'fr-label'
          .fr-fieldset__element.fr-fieldset__element--inline
            .fr-radio-group
              = ff.radio_button :filter_value, false, required: true
              = ff.label :filter_value, I18n.t('false', scope: [:activerecord, :attributes, :additional_subject_questions, key], default: t('no').titleize), value: false, class: 'fr-label'

      .form__group.submit-buttons
        = render 'previous_button', path: step_company_search_solicitation_path(@solicitation.uuid, anchor: 'section-formulaire')
        = f.submit t('solicitations.creation_form.buttons.send'), class: 'fr-btn', data: { disable_with: t('solicitations.creation_form.submit_in_progress') }

- content_for :footer do
  = render 'iframe_footer', landing: @solicitation.landing
