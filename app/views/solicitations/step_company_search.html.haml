- content_for :header, render('solicitations/header', landing: @solicitation.landing, landing_subject: @solicitation.landing_subject)

- content_for :form_header do
  = render 'solicitations/steps', current_status: :step_company

.fr-grid-row
  .fr-col-12.fr-col-md-6.fr-col-offset-md-3.multistep-form.fr-pb-3w

    - if @error_message.present?
      .fr-alert.fr-alert--error.fr-mb-2w
        %p.fr-alert__title
        %p= t('api_requests.embraced_error_html', message: @error_message, url: step_company_solicitation_path(@solicitation.uuid, anchor: 'section-formulaire'))

    .no-js-only
      = form_with(model: @solicitation, url: search_company_solicitation_path(@solicitation.uuid), local: true, method: :get) do |f|
        .fr-mb-2w
          = label_tag "query", t("solicitations.creation_form.find_my_facility"), class: 'fr-label'
          = text_field_tag :query, (params[:query] || @solicitation.siret), required: true, placeholder: t("solicitations.creation_form.search_facility_placeholder"), class: 'fr-input white-bg'
        .submit-buttons
          = render 'previous_button', path: step_contact_solicitation_path(@solicitation.uuid, anchor: 'section-formulaire')
          = button_tag(class: "fr-btn", data: { disable_with: t('solicitations.creation_form.submit_in_progress') }) do
            %span= t('solicitations.creation_form.buttons.search')
            %span.icon.ri-search-2-line

    .with-js-only
      = form_with(model: @solicitation, url: update_step_company_solicitation_path(@solicitation.uuid), local: true, html: { honeypot: true }) do |f|
        .fr-mb-2w
          = f.label :siret, t("solicitations.creation_form.find_my_facility"), class: 'fr-label'
          %span.fr-hint-text= t("solicitations.creation_form.search_facility_placeholder")
          .siret-autocomplete{ 'data-controller': "pages-siret-autocomplete" }
            %div{ data: { 'pages-siret-autocomplete-target': "field", 'assistive-hint': t("solicitations.creation_form.siret_assistive_hint"), name: 'solicitation_siret', 'default-value': (params[:query] || @solicitation.siret), url: search_company_solicitation_path(@solicitation.uuid) } }
            = f.hidden_field :code_region, data: { 'pages-siret-autocomplete-target': 'codeRegionField' }
            = hidden_field_tag :un_seul_etablissement, nil, data: { 'pages-siret-autocomplete-target': 'unSeulEtablissementField' }

        .submit-buttons
          = render 'previous_button', path: step_contact_solicitation_path(@solicitation.uuid, anchor: 'section-formulaire')
          = render 'next_button'

- content_for :footer do
  = render 'iframe_footer', landing: @solicitation.landing
