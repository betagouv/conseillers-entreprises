- meta title: t('.title')

- content_for :header, render('header', title: t('.header', status: @status))
- content_for :menu, render('menu', count: @count_solicitations)

= form_with url: request.path, method: :get, skip_enforcing_utf8: true, class: '' do
  - options = { include_blank: t('all_choices'), class: 'fr-select' }
  .two.fields
    .field
      = label_tag(:territory, t('.filter'), class: 'fr-label')
      = select_tag(:territory,
      options_for_select(possible_territories_options, (params[:territory] || session[:s_territory])),
      options.dup)

%p= collection_count @solicitations

.ui.divider.hidden
= form_with url: request.fullpath, method: :get, local: true do |f|
  .ui.search.solicitation
    .ui.input.left.icon.fluid.action
      %span.ri-search-line.icon{ 'aria-hidden': 'true' }
      = f.text_field :query, value: params[:query], class: 'prompt', placeholder: t('.search_placeholder')
      %button.ui.button.primary{ type: 'submit' }= t('.search')
    .results
  - if params[:query].present?
    = link_to t('.clear_search'), request.fullpath.split('?').first, id: 'clear-search'

= paginate @solicitations

- if @solicitations.present?
  = render(partial: 'solicitation', collection: @solicitations, cached: -> (solicitation) { [solicitation, Badge.all] })
- elsif params[:query].present?
  .ui.divider.hidden
  = t('.no_result')
- else
  .ui.divider.hidden
  .ui.fluid.image= image_tag('no-solicitation.gif')

= paginate @solicitations

