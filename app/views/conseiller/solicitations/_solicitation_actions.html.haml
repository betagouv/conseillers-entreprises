.solicitation-actions
  - if solicitation.diagnosis.nil?
    - if solicitation.may_prepare_diagnosis?
      - if solicitation.prepare_diagnosis_errors.present?
        - error_text = solicitation.prepare_diagnosis_errors_to_s.to_sentence
        %button.fr-btn.actions.error-425-bg.info{ aria: { describedby: "tooltip-diagnosis-major-errors-#{solicitation.id}" } }
          %span.ri-error-warning-line.fr-mr-2v{ 'aria-hidden': 'true' }
          = t('.prepare_diagnosis_errors', count: solicitation.prepare_diagnosis_errors.count)
        %span.fr-tooltip.fr-placement{ id: "tooltip-diagnosis-major-errors-#{solicitation.id}", role: "tooltip" }
          = error_text
        = render 'retry_diagnosis', solicitation: solicitation
      - else
        .actions.success-main-525-bg
          = link_to prepare_diagnosis_conseiller_solicitation_path(solicitation), class: 'button', method: :post, 'data-turbo': false do
            %span.ri-rocket-2-fill.fr-mr-1w{ 'aria-hidden': 'true' }
            = t('.start_auto_diagnosis')
            %span.ri-arrow-right-s-line.fr-ml-1w{ 'aria-hidden': 'true' }
    - else
      .actions.success-main-525-bg
        = link_to new_conseiller_diagnosis_path(solicitation: solicitation.id), class: 'button', 'data-turbo': false do
          = t('.start_diagnosis')
          %span.ri-arrow-right-s-line.fr-ml-1w{ 'aria-hidden': 'true' }

    -# Analyse existante
  - else
    - if solicitation.prepare_diagnosis_errors_to_s.present?
      - error_text = solicitation.prepare_diagnosis_errors_to_s.to_sentence
      .actions.warning-main-525-bg
        = link_to_diagnosis(solicitation.diagnosis)
      %button.fr-btn.ri-error-warning-line.warning-main-525-bg{ aria: { describedby: "tooltip-diagnosis-errors-#{solicitation.id}" } }
      %span.fr-tooltip.fr-placement{ id: "tooltip-diagnosis-errors-#{solicitation.id}", role: "tooltip" }
        = error_text
      = render 'retry_diagnosis', solicitation: solicitation

    - else
      .actions.success-main-525-bg
        = link_to_diagnosis(solicitation.diagnosis)

  .dropdown.actions.info-main-525-bg#generic-emails
    %button.button
      = t('.send_email')
      %span.ri-mail-add-fill.fr-ml-1w{ 'aria-hidden': 'true' }
    %ul.dropdown-content.fr-menu__list
      - Solicitation::GENERIC_EMAILS_TYPES.each do |column|
        %li.fr-menu__item
          %ul.fr-menu__list
            - column.each do |email_type|
              %li.fr-menu__item
                = link_to t(email_type, scope: 'solicitations.solicitation_actions.emails'),
                  emails_solicitation_generic_path(email_type: email_type, id: solicitation.id, query: params[:query]),
                  method: :post, class: 'fr-nav__link', 'data-turbo': false

  .dropdown.actions.grey-medium-bg
    %button.button
      %span.ri-list-settings-fill{ 'aria-hidden': 'true' }
    %ul.dropdown-content.fr-menu__list
      = status_action_link(solicitation, 'canceled', %w[fr-nav__link]) if solicitation.may_cancel?
      %li.fr-menu__item
        .fr-nav__link.show-feedbacks-form.clickable{ 'data-feedbackable': "#{solicitation.id}", tabindex: "0" }
          = t('feedbacks.add')
      %li.fr-menu__item
        = link_to mark_as_spam_conseiller_solicitation_path(solicitation), class: 'fr-nav__link', method: :patch do
          = t('.add_email_as_spam')
