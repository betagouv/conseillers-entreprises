.card-solicitation.fr-my-4w.card{ id: solicitation.id }
  .card__header
    .card__title
      %h2= [solicitation.to_s, solicitation.full_name].join(' - ')
      %span.subtitle= I18n.l(solicitation.completed_at, format: :long)
    = render 'solicitation_badges', solicitation: solicitation
  .fr-card__body.fr-text--sm
    .fr-card__content
      .card__info
        %ul.card__fields.list-unstyled.fr-p-0
          - if solicitation.siret.present?
            %li.item.fr-p-0
              = t('.siret')
              %strong= link_to(solicitation.normalized_siret, show_with_siret_companies_path(solicitation.siret), data: { turbo: false })
          %li.item.fr-p-0
            = t('.email')
            %strong= mail_to(solicitation.email, solicitation.email, target: '_blank')
          - solicitation.display_attributes.each do |attribut|
            - if solicitation.send(attribut).present?
              %li.item.fr-p-0
                = Solicitation.human_attribute_name(attribut) + ' : '
                %strong= solicitation.send(attribut)
          - if solicitation.landing.present?
            %li.item.fr-p-0
              = t('.source')
              %strong= link_to solicitation.landing.slug, landing_path(solicitation.landing)
          - if solicitation.landing_subject.present?
            %li.item.fr-p-0
              = t('.landing_subjects')
              = subject_button(solicitation, "fr-btn fr-btn--secondary fr-btn--sm")
          = display_region(solicitation.region, params[:territory])

        .card__meta
          %ul.fr-badge-group.meta__warnings
            - if solicitation.facility&.all_nature_activites&.any?
              - translated_nature_activites(solicitation.facility&.all_nature_activites).each do |nature|
                %li.fr-badge.fr-badge--info.fr-badge--no-icon= nature
            - else
              %li.fr-badge.fr-badge--warning.fr-badge--no-icon{ title: t('.solicitation_no_nature_activites') } ?
            - if solicitation.recent_matched_solicitations.any?
              %li.fr-badge.fr-badge--warning.fr-badge--no-icon{ title: t('.solicitation_relance_explanation') } R
            - if solicitation.doublon_solicitations.any?
              %li.fr-badge.fr-badge--warning.fr-badge--no-icon{ title: t('.solicitation_doublon_explanation') } D
            - if solicitation.has_similar_abandonned_solicitations?
              %li.fr-badge.fr-badge--warning.fr-badge--no-icon{ title: t('.similar_abandonned_solicitations_explanation') } A
            - if solicitation.from_intermediary?
              %li.fr-badge.fr-badge--warning.fr-badge--no-icon{ title: t('.from_intermediary') } I
            - if solicitation.not_sas?
              %li.fr-badge.fr-badge--warning.fr-badge--no-icon{ title: t('.not_sas_explanation') }= t('.not_sas_html')
          - if facilities[solicitation.id].present?
            .meta__items
              .item= t('.needs_historic')
              - facilities[solicitation.id].each do |facility|
                = link_to facility[:company_name], needs_company_path(facility[:id])
          - if solicitation.institution.present?
            .logo-institution= institution_image(solicitation.institution.logo&.filename)
      .card__description
        .card__description__label= t('.description')
        .card__description__content.break-word
          = simple_format(solicitation.description)
          - if solicitation.subject_answers.any?
            %ul
              - solicitation.subject_answers.each do |answer|
                - answer_label = I18n.t(answer.filter_value, scope: [:activerecord, :attributes, :subject_questions, answer.key],
                  default: I18n.t(answer.filter_value, scope: [:boolean, :text]))
                %li
                  = question_label(answer.key, :short)
                  %strong= answer_label


      .card__feedbacks
        %div{ id: "display-feedbacks-#{solicitation.id}" }
          = render partial: 'feedbacks/feedback', collection: solicitation.feedbacks
        = render 'feedbacks/form', feedback: solicitation.feedbacks.new(category: :solicitation)
  .card__footer
    = render 'solicitation_actions', solicitation: solicitation
