- cache [need, action] do
  .card-reminders-need.fr-my-4w.card
    .card__header
      .card__title
        %h2.fr-h4= link_to need.company.name, need_path(need, origin: 'reminders')
        .subtitle.subtitle--dates
          = t('needs.dates.creation', date: l(need.display_date, format: :long))
        .subtitle.subtitle--dates
          = t('needs.dates.last_not_for_me', date: l(need.matches.status_not_for_me.maximum(:taken_care_of_at).to_time, format: :sentence))
      = render 'reminders/needs_badges', need: need
    .fr-card__body.fr-text--sm
      .fr-card__content
        .card__need
          .card__need-title
            %h3.fr-h6
              = need.subject
            .subtitle
              = need.matches.human_count
              - if need.no_activity?
                .label.label--sm.orange= t('conseiller.diagnoses.last_activity_date', l: l(need.updated_at.to_date, format: :long))
        .refused-feedbacks
          - need.refused_feedbacks.find_each do |feedback|
            .comment__container.fr-mb-4w
              .comment__title
                = feedback.description
              .comment__meta
                - date = I18n.l(feedback.created_at, format: :sentence)
                = t('.comment_date', date: date, author: [feedback.user.full_name, feedback.user.antenne.name].join(', '))

        .card__feedbacks
          %div{ id: "display-feedbacks-#{need.id}" }
            = render partial: 'feedbacks/feedback', collection: need.reminder_feedbacks, cached: true
          = render 'feedbacks/form', feedback: need.reminder_feedbacks.new
