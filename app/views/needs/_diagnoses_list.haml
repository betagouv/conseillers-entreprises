.ui.segments.shadow-less.selectable-list
  .ui.segment.secondary
    .ui.header
      = title
      .sub.header= models_human_description(diagnoses)
  - diagnoses.each do |diagnosis|
    .ui.segment.selectable-item
      %a{ href: besoin_path(diagnosis, params.permit(:access_token)) }
        %h3.ui.header
          .sub.header= I18n.l(diagnosis.display_date, format: '%-d %B %Y')
          = diagnosis.company.name
          .sub.header= diagnosis.facility.commune_name
        - needs_of_interest = diagnosis.needs
        - if relay_or_expert.present?
          - needs_of_interest = needs_of_interest.of_relay_or_expert(relay_or_expert)
        - needs_of_interest.each do |need|
          .diagnoses-list-item-need
            %h4.ui.header
              = need.subject
              .match-status= status_label(need.status)
              .sub.header= models_human_description(need.matches)
        - can_archive = diagnosis.advisor == current_user
        - if can_archive
          %h4.ui.header
            .ui.basic.tiny.button.text
              %i.trash.icon
              - confirm_delete_message = t('diagnoses.index.delete_diagnosis_confirmation_message', company_name: diagnosis.company.name)
              = link_to "Archiver", diagnosis_path(diagnosis), method: :delete, data: { confirm: confirm_delete_message }
