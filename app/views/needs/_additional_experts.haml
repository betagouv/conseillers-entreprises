:ruby
  return unless policy(need).add_match?

.additional-experts.fr-pt-2w#add-expert-form{ data: { controller: "expert-autocomplete" }, id: "additional_experts-#{need.id}" }
  .expert-search-bar
    = form_with url: add_match_need_path(need), data: { 'expert-autocomplete-target': 'form', turbo_frame: "match-checkboxes-XXX" } do |add_f|
      = add_f.hidden_field :need_id, value: need.id, data: { 'toggle-block-target': 'itemId' }
      = add_f.hidden_field :expert_id, value: nil, data: { 'expert-autocomplete-target': 'expertField' }
      .label-loader
        = label_tag "omnisearch", t('.add_other_experts'), class: 'fr-label'
        .hidden.loader.fr-ml-1w{ data: { 'expert-autocomplete-target': 'loader' } }
      .input
        %span.ri-user-add-fill.blue.info-icon{ title: t('.ambulance_explanation'), 'aria-hidden': 'true' }
        .autocomplete-container{ data: { 'expert-autocomplete-target': "field",
        'assistive-hint': t("autocomplete_assistive_hint"),
        name: 'omnisearch',
        'search-url': conseiller_experts_path,
        'search-insee-code': need.facility.insee_code
        } }
