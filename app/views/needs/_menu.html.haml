- needs_other_recipient_section = antenne.experts != user.experts
- if needs_other_recipient_section
  .ui.sub.header= t('.for_recipient', recipient: recipient)

-# Dynamically build the path for each of the collections. Paths look like this:
  /besoins(/antenne)/:collection_name
- collections_counts.each do |name, count|
  - prefix = 'antenne' if recipient == antenne
  - path = polymorphic_path([prefix, name, :needs].compact)
  = menu_link_with_count(t(name, scope: 'needs.collections'), count, path, class: 'item')

- if needs_other_recipient_section
  .ui.sub.header
    = t('.for_other_header')
  - if recipient != antenne
    = link_to antenne_quo_needs_path, class: 'item' do
      %i.users.icon
      = t('.for_other_antenne', antenne: antenne)
  - if recipient != user
    = link_to quo_needs_path, class: 'item' do
      %i.user.icon
      = t('.for_other_user', user: user)
