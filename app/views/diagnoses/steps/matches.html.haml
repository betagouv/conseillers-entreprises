- meta title: Diagnosis.human_attribute_value(:step, :matches)

.fr-container
  = render 'header', diagnosis: @diagnosis, current_page_step: 4

  #matches-app
    .ui.info.message
      = t('.explanation')

    .ui.segment
      %details
        %summary
          %strong Rappel de la sollicitation
        - if @diagnosis.content.present?
          %blockquote
            %span= simple_format(auto_link(@diagnosis.content))

    = form_with model: @diagnosis,
      url: update_matches_diagnosis_path(@diagnosis),
      class: 'ui form',
      data: { checkboxes_require_one_with: t(".select_at_least_one_expert") } do |form|
      - @diagnosis.needs.ordered_for_interview.each do |need|
        .ui.segment.shadow-less
          %h3.ui.header= need.subject
          - experts_subjects = CreateDiagnosis::FindRelevantExpertSubjects.new(need).call
          - support_subject = ExpertSubject.support_for(@diagnosis)
          - if experts_subjects.present?
            = render 'expert_subject_checkboxes', form: form, need: need, experts_subjects: experts_subjects
          - elsif support_subject.present?
            .field.warning
              .ui.warning.message
                = t('.no_expert_subject')
                = t('.you_can_contact_support')
            = render 'expert_subject_checkboxes', form: form, need: need, experts_subjects: support_subject
          - else
            %p= t('.no_expert_subject')

      .ui.hidden.divider
      .field.info
        .ui.info.message
          .content
            .header= t('.before_sending_emails_1')
            %p= t('.before_sending_emails_2')

      .bottom_actions.flex
        = link_to visit_diagnosis_path(@diagnosis), class: 'fr-btn fr-btn--icon-left no-margin' do
          %span.ri-arrow-left-line.fr-mr-1w
          = t('previous_step')

        - button_classes = []
        - if @diagnosis.visitee.blank?
          - button_classes << 'disabled'
        %button.fr-btn.btn-green#next-step-button{ class: button_classes }
          = t('.notify_matches')
