- meta title: Diagnosis.human_attribute_value(:step, :matches)

.fr-container
  = render 'header', diagnosis: @diagnosis, current_page_step: 4

  #matches-app
    - if @company_needs.present?
      .fr-alert.fr-alert--warning.fr-mb-2w{ role: "alert" }
        .fr-alert__title= t('.company_needs_historic_title')
        %p= link_to t('.link_to_historic'), needs_company_path(@diagnosis.facility), target: :blank, reel: :noopener
    - if @contact_needs.present? && @company_needs.blank?
      .fr-alert.fr-alert--warning.fr-mb-2w{ role: "alert" }
        .fr-alert__title= t('.contact_needs_historic_title')
        %p= link_to t('.link_to_historic'), needs_historic_contact_path(@diagnosis.visitee), target: :blank, reel: :noopener

    = form_with model: @diagnosis,
      url: update_matches_diagnosis_path(@diagnosis),
      data: { checkboxes_require_one_with: t(".select_at_least_one_expert") },
      local: true do |form|

      %details.fr-callout.fr-mb-2w
        %summary
          %strong= t('.solicitation_reminder')
        = form.text_area :content, class: 'fr-input fr-mt-2w'

      - @diagnosis.needs.ordered_for_interview.each do |need|
        .card-matches.fr-mb-2w
          .card__header
            %h2.fr-text--lead= need.subject
          - experts_subjects = CreateDiagnosis::FindRelevantExpertSubjects.new(need).call
          - support_subject = ExpertSubject.support_for(@diagnosis)
          - if experts_subjects.present?
            = render 'expert_subject_checkboxes', form: form, need: need, experts_subjects: experts_subjects
          - elsif support_subject.present?
            .fr-highlight.fr-mt-2w
              %p= t('.no_expert_subject')
              %p= t('.you_can_contact_support')
            = render 'expert_subject_checkboxes', form: form, need: need, experts_subjects: support_subject
          - else
            .fr-highlight.fr-mt-2w
              %p= t('.no_expert_subject')

      .fr-callout
        %p.fr-callout__text= t('.before_sending_emails')

      .bottom_actions.flex
        = link_to needs_diagnosis_path(@diagnosis), class: 'fr-btn btn-blue fr-btn--icon-left', data: { turbolinks: false } do
          %span.ri-arrow-left-line.fr-mr-1w{ 'aria-hidden': 'true' }
          = t('previous_step')

        - button_classes = []
        - if @diagnosis.visitee.blank?
          - button_classes << 'disabled'
        %button.fr-btn.btn-green#next-step-button{ class: button_classes }
          = t('.notify_matches')
