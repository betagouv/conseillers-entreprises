- meta title: Diagnosis.human_attribute_value(:step, :needs)

.fr-container
  = render 'header', diagnosis: @diagnosis, current_page_step: 3

  #needs-app
    = form_with model: @diagnosis,
      url: update_needs_diagnosis_path,
      data: { checkboxes_require_one_with: t(".select_at_least_one_need"), controller: "diagnosis-needs-step" },
      local: true do |diagnosis_form|

      %h1= Diagnosis.human_attribute_value(:step, :needs)

      .fr-input-group
        = diagnosis_form.label t('.diagnosis_content_subtitle'), class: 'fr-label'
        = diagnosis_form.text_area :content, placeholder: t('.diagnosis_content_placeholder'), rows: 2, class: 'fr-input'

      - @themes.each do |theme|
        - subjects = theme.subjects.for_interview
        - if subjects.present?
          %section.fr-accordion
            %h2.fr-accordion__title
              %button.fr-accordion__btn{ 'aria-controls': "accordion-#{theme.id}", 'aria-expanded': @diagnosis.themes.include?(theme).to_s, type: 'button' }
                = theme
            .fr-collapse{ id: "accordion-#{theme.id}" }
              - all_needs = @diagnosis.needs
              - subjects.each do |subject|
                - need = all_needs.where(subject: subject).first_or_initialize
                .fr-checkbox-group.subject.fr-mt-3v
                  = diagnosis_form.fields_for :needs, need do |need_form|
                    = need_form.check_box :_destroy, { checked: need.persisted?, data: { action: "change->diagnosis-needs-step#autoUncheck", 'diagnosis-needs-step-target': "checkboxes" } }, '0', '1'
                    = need_form.label :_destroy, subject, class: 'fr-label '
                    = need_form.hidden_field :subject_id
                    -# Institution filters
                    - additional_subject_questions = AdditionalSubjectQuestion.where(subject: subject)
                    - additional_subject_questions.each do |question|
                      - filter = need.institution_filters.where(additional_subject_question: question).first_or_initialize
                      = need_form.fields_for :institution_filters, filter do |filter_form|
                        - key = filter_form.object.key
                        .fr-form-group.additional_questions.fr-mt-2v
                          %fieldset.fr-fieldset.fr-fieldset--inline
                            %legend.fr-fieldset__legend.fr-text--regular= I18n.t(:label, scope: [:activerecord, :attributes, :additional_subject_questions, key])
                            .fr-fieldset__content
                              = filter_form.hidden_field :id
                              = filter_form.hidden_field :additional_subject_question_id
                              .fr-radio-group
                                = filter_form.radio_button :filter_value, true
                                = filter_form.label :filter_value, I18n.t(:answer_yes, scope: [:activerecord, :attributes, :additional_subject_questions, key], default: t('yes').titleize), value: true, class: 'fr-label'
                              .fr-radio-group
                                = filter_form.radio_button :filter_value, false
                                = filter_form.label :filter_value, I18n.t(:answer_no, scope: [:activerecord, :attributes, :additional_subject_questions, key], default: t('no').titleize), value: false, class: 'fr-label'
                    = need_form.text_area :content, placeholder: t('.need_content_placeholder'), rows: 2, class: 'fr-input'

              .fr-mt-2w
                = render 'next_step', diagnosis_form: diagnosis_form

      .bottom_actions.fr-mt-10v
        = link_to contact_diagnosis_path, class: 'fr-btn btn-blue fr-btn--icon-left', data: { turbo: false } do
          %span.ri-arrow-left-line.fr-mr-1w{ 'aria-hidden': 'true' }
          = t('previous_step')

        = render 'next_step', diagnosis_form: diagnosis_form
