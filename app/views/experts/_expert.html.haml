.card.card--expert.fr-my-4w
  .card__header{ class: "#{expert_card_class(controller, expert)}" }
    %h2.fr-h4.fr-card__title
      = link_to expert.full_name.presence, quo_active_reminders_expert_path(expert), class: 'fr-card__link'
      - if expert.users.any?(&:invitation_not_accepted?)
        %span.fr-h6.picto.ri-mail-forbid-line{ 'aria-hidden': 'true', title: t('conseiller.diagnoses.steps.expert_content.invitation_not_accepted') }
    .fr-grid-row
      .fr-col-7.fr-pb-2v
        %ul.list-unstyled.card-expert__list
          %li= t('.expert_creation_date', date: I18n.l(expert.created_at.to_date, format: :long))
          - if expert.job.present?
            %li
              %span.picto.ri-contacts-book-line{ 'aria-hidden': 'true' }
              = expert.job
          - if expert.antenne.present?
            %li
              %span.picto.ri-government-line{ 'aria-hidden': 'true' }
              = expert.antenne.name
          - if expert.phone_number.present?
            %li
              %span.picto.ri-phone-line{ 'aria-hidden': 'true' }
              = link_to(expert.phone_number, "tel:#{expert.phone_number}")
          - if expert.email.present?
            %li
              %span.picto.ri-mail-line{ 'aria-hidden': 'true' }
              = mail_to expert.email, expert.email, class: 'break-word'
      .fr-col-5
        - expert.antenne.managers.each do |manager|
          %ul.list-unstyled.card-expert__list
            %li
              %span.picto.ri-nurse-fill{ 'aria-hidden': 'true' }
              = t('.manager_name', name: manager.full_name)
            %li
              %span.picto.ri-mail-fill{ 'aria-hidden': 'true' }
              = mail_to manager.email, manager.email, class: 'break-word'
            - if manager.phone_number.present?
              %li
                %span.picto.ri-phone-fill{ 'aria-hidden': 'true' }
                = link_to(manager.phone_number, "tel:#{manager.phone_number}")
      .fr-grid-row
        .fr-col-7
          .fr-accordion__title
            %button.fr-accordion__btn.fr-btn.fr-btn--secondary.fr-btn--sm.fr-p-2v{ 'aria-controls': "accordion-#{expert.id}", 'aria-expanded': 'false' }
              = t('.team_composition')
          .fr-collapse.team-members{ id: "accordion-#{expert.id}" }
            = render partial: 'user_admin_view', collection: expert.users, as: :user
  .fr-card__body
    .fr-card__content
      - cache ["received_matches", expert, expert.received_matches, expert.needs_quo_active] do
        .card-expert__subtitle= t('.matches_total')
        .fr-tags-group
          %p.fr-tag
            %span.bold.fr-mr-1v= expert.received_matches.count
            = t('.received_matches')
          - inbox_collections_counts(expert).each do |name, count|
            - path = polymorphic_path([name, :reminders, expert])
            = link_to path, class: 'fr-tag' do
              %span.bold.fr-mr-1v= count
              = t(name, scope: 'needs.collections').downcase
      - expert_last_chance_needs = expert.received_needs.reminders_to(:last_chance)

      - if expert_last_chance_needs.present? && complete_card
        .card-expert__subtitle.fr-mt-2w= t('.needs_in_last_chance')
        .fr-tags-group
          = link_to expert_reminders_needs_path(expert_id: expert.id), class: 'fr-tag warning' do
            %span.bold.fr-mr-1v= expert_last_chance_needs.count
            = t('activerecord.models.need', count: expert_last_chance_needs.count).downcase

      %hr.fr-mt-2v
      - cache ['expert_feedbacks', expert, expert.reminder_feedbacks.ids] do
        = render 'feedbacks/form', feedback: expert.reminder_feedbacks.new
        .fr-mt-3w
          = render 'experts/expert_feedbacks', expert: expert
  - if complete_card
    .card__footer
      - if action == :one_pending_need
        = form_with model: expert, url: send_re_engagement_email_reminders_expert_path(expert), method: :post, data: { turbo: true } do |f|
          = f.submit t('.send_one_pending_need_email'), class: 'fr-btn fr-btn--secondary fr-mr-2v'
      - else
        = form_with model: expert, url: send_reminder_email_reminders_expert_path(expert), method: :post, data: { turbo: true } do |f|
          = f.submit t('.send_reminders_email'), class: 'fr-btn fr-btn--secondary fr-mr-2v'
      - if with_reminder_action?(action)
        - reminders_register = get_reminder_register(expert, action)
        - if reminders_register.present?
          = form_with model: expert, url: reminders_reminders_register_path(reminders_register), method: :patch, local: true, data: { turbo: false } do |f|
            = f.submit t('.process'), class: 'fr-btn fr-mr-2v'
