version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.5.1
  qlty: qltysh/qlty-orb@0.0

defaults:
  &defaults
  working_directory: ~/conseillers-entreprises
  docker:
    - image: cimg/ruby:3.3.4-browsers
    - image: cimg/redis:7.2.3
    - image: cimg/postgres:14.10
      environment:
        POSTGRES_USER: conseillers_entreprises_test
        POSTGRES_PASSWORD: conseillers_entreprises_test
        POSTGRES_DB: conseillers_entreprises_test

bundle_restore_cache:
  &bundle_restore_cache
  restore_cache:
    key: v1-bundle-install-{{ arch }}-{{ checksum "Gemfile.lock" }}

yarn_restore_cache:
  &yarn_restore_cache
  restore_cache:
    key: v1-yarn-cache-{{ arch }}-{{ checksum "yarn.lock" }}

bundle_save_cache:
  &bundle_save_cache
  save_cache:
    key: v1-bundle-install-{{ arch }}-{{ checksum "Gemfile.lock" }}
    paths:
      - ~/vendor/bundle

yarn_save_cache:
  &yarn_save_cache
  save_cache:
    key: v1-yarn-cache-{{ arch }}-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

bundle_install:
  &bundle_install
  run:
    name: Install Ruby Dependencies
    command: bundle install

yarn_install:
  &yarn_install
  run:
    name: Install Yarn Dependencies
    command: yarn install --ignore-engines

yarn_build:
  &yarn_build
  run:
    name: Bundle js assets
    command: yarn build

check_chrome_installation:
  &check_chrome_installation
  run:
    name: Check Chrome install
    command: |
      google-chrome --version
      chromedriver --version
jobs:
  test:
    <<: *defaults
    parallelism: 1
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 121.0.6167.184
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - *check_chrome_installation
      - *bundle_restore_cache
      - *yarn_restore_cache
      - *bundle_install
      - *yarn_install
      - *yarn_build

      - run:
          environment:
            DATABASE_URL: "postgres://conseillers_entreprises_test@localhost:5432/conseillers_entreprises_test"
            RORVSWILD_KEY: 'rorvswild'
          name: Create DB
          command: bundle exec rake db:create db:schema:load db:migrate RAILS_ENV=test
      - run:
          environment:
            DATABASE_URL: "postgres://conseillers_entreprises_test@localhost:5432/conseillers_entreprises_test"
            APPLICATION_EMAIL: "contact@mailrandom.fr"
            APPLICATION_MARKETING_EMAIL: "contact@marketing.mailrandom.fr"
            TEST_ERROR_RENDERING: "false"
            CI: 'true'
            RORVSWILD_KEY: 'rorvswild'
            REDIS_URL: 'redis://localhost:6379/1'
          name: Run Tests, Split by Timings
          command: |
            bundle exec rspec --profile 10 \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - qlty/coverage_publish:
          files: coverage/coverage.json
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/screenshots

    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large
  lint:
    <<: *defaults
    steps:
      - checkout
      - *bundle_restore_cache
      - *yarn_restore_cache
      - *bundle_install
      - *yarn_install
      - run:
          name: Run lint tasks
          command: bundle exec rake lint
workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
        filters:
          branches:
            ignore:
              - main
              - production
      - lint:
        filters:
          branches:
            ignore:
              - main
              - production
