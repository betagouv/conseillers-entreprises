version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.4

defaults:
  &defaults
  working_directory: ~/place-des-entreprises
  docker:
    - image: cimg/ruby:3.1.2-browsers
    - image: cimg/redis:7.2.3
    - image: cimg/postgres:13.5-postgis
      environment:
        POSTGRES_USER: place_des_entreprises_test
        POSTGRES_PASSWORD: place_des_entreprises_test
        POSTGRES_DB: place_des_entreprises_test

bundle_restore_cache:
  &bundle_restore_cache
  restore_cache:
    key: v1-bundle-install-{{ arch }}-{{ checksum "Gemfile.lock" }}

yarn_restore_cache:
  &yarn_restore_cache
  restore_cache:
    key: v1-yarn-cache-{{ arch }}-{{ checksum "yarn.lock" }}

bundle_save_cache:
  &bundle_save_cache
  save_cache:
    key: v1-bundle-install-{{ arch }}-{{ checksum "Gemfile.lock" }}
    paths:
      - ~/vendor/bundle

yarn_save_cache:
  &yarn_save_cache
  save_cache:
    key: v1-yarn-cache-{{ arch }}-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

bundle_install:
  &bundle_install
  run:
    name: Install Ruby Dependencies
    command: bundle install

yarn_install:
  &yarn_install
  run:
    name: Install Yarn Dependencies
    command: yarn install --ignore-engines

check_chrome_installation:
  &check_chrome_installation
  run:
    name: Check Chrome install
    command: |
      google-chrome --version
      chromedriver --version

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - *bundle_restore_cache
      - *yarn_restore_cache
      - *bundle_install
      - *yarn_install
      - *bundle_save_cache
      - *yarn_save_cache
  test:
    <<: *defaults
    parallelism: 1
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 116.0.5845.96
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - *check_chrome_installation
      - *bundle_restore_cache
      - *yarn_restore_cache
      - *bundle_install
      - *yarn_install
      - run:
          environment:
            DATABASE_URL: "postgis://place_des_entreprises_test@localhost:5432/place_des_e\
              ntreprises_test"
            RORVSWILD_KEY: 'rorvswild'
          name: Create DB
          command: bundle exec rake db:create db:schema:load db:migrate RAILS_ENV=test
      - run:
          name: Setup Code Climate Test Reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - run:
          environment:
            DATABASE_URL: "postgis://place_des_entreprises_test@localhost:5432/place_des_e\
              ntreprises_test"
            APPLICATION_EMAIL: "contact@mailrandom.fr"
            APPLICATION_MARKETING_EMAIL: "contact@marketing.mailrandom.fr"
            TEST_ERROR_RENDERING: "false"
            CI: 'true'
            RORVSWILD_KEY: 'rorvswild'
            REDIS_URL: 'redis://localhost:6379/1'
            CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
            COVERAGE: true
          name: Run Tests, Split by Timings
          command: |
            bundle exec rspec --profile 10 \
              --format RspecJunitFormatter \
              --out ~/test-results/rspec/results.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: tmp/screenshots
      - run:
          environment: 
            CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter format-coverage -t simplecov $CIRCLE_ARTIFACTS/coverage/.resultset.json
            ./tmp/cc-test-reporter upload-coverage
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large
  lint:
    <<: *defaults
    steps:
      - checkout
      - *bundle_restore_cache
      - *yarn_restore_cache
      - *bundle_install
      - *yarn_install
      - run:
          name: Run lint tasks
          command: bundle exec rake lint
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build
